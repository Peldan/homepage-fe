{"version":3,"sources":["components/ModalWindow.tsx","helper.ts","constants.ts","components/ContentBox.tsx","components/Header.tsx","components/Weather.tsx","components/Home.tsx","index.tsx"],"names":["ModalWindow","props","state","url","handleInput","bind","e","this","setState","target","value","Modal","show","isOpen","onHide","onClose","Header","closeButton","Title","title","Body","htmlFor","InputGroup","className","FormControl","onChange","id","Footer","Button","variant","onClick","onConfirm","React","Component","shouldBeRefreshed","lastRefreshed","fiveMinutesAgo","Date","now","getMilliseconds","ContentBox","showModal","rssFeed","currentlyViewing","amountOfPages","activePage","lastUpdated","undefined","openModal","closeModal","clearData","getRSSFeed","populatePage","fetch","method","body","then","res","json","Math","ceil","length","toSave","localStorage","setItem","String","JSON","stringify","locallyStoredJson","getItem","savedState","parse","prevState","key","index","div","floor","mod","slice","rss","map","dto","Row","href","Image","src","imgUrl","fluid","rounded","description","pages","i","push","Pagination","Item","active","Col","xs","md","size","Navbar","bg","Weather","symbol","currentWeather","time","temperature","checkWeather","Symbol","location","coords","lat","round","latitude","pow","lon","longitude","current","timeSeries","parameters","values","validTime","toDateString","toString","stored","process","Home","rowCount","addRow","deleteRow","navigator","geolocation","getCurrentPosition","loc","count","row","cols","rows","buildCols","buildRows","Container","Jumbotron","color","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.71dfb43f.chunk.js","sourcesContent":["import { Modal } from \"react-bootstrap\";\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport {FormControl, InputGroup} from \"react-bootstrap/esm\";\r\n\r\nexport interface ModalWindowProps {\r\n    title: string;\r\n    onConfirm: (...args: any[]) => any;\r\n    onClose: (...args: any[]) => any;\r\n    isOpen: boolean;\r\n}\r\n\r\nexport interface ModalWindowState {\r\n    url: string\r\n}\r\n\r\nexport class ModalWindow extends React.Component<ModalWindowProps, ModalWindowState>{\r\n\r\n    constructor(props: ModalWindowProps) {\r\n        super(props);\r\n        this.state = {\r\n            url: \"\"\r\n        };\r\n        this.handleInput = this.handleInput.bind(this);\r\n    }\r\n\r\n    handleInput(e: any){\r\n        this.setState({url: e.target.value});\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Modal show={this.props.isOpen} onHide={this.props.onClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>{this.props.title}</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <label htmlFor=\"basic-url\">RSS URL</label>\r\n                    <InputGroup className=\"mb-3\">\r\n                        <FormControl onChange={this.handleInput} id=\"basic-url\" />\r\n                    </InputGroup>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={this.props.onClose}>Close</Button>\r\n                    <Button variant=\"primary\" onClick={() => this.props.onConfirm(this.state.url)}>Save changes</Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import {REFRESH_INTERVAL} from \"./constants\";\r\n\r\nexport function shouldBeRefreshed(lastRefreshed: Date): boolean {\r\n    if(!lastRefreshed){\r\n        return true;\r\n    }\r\n    const fiveMinutesAgo = Date.now() - REFRESH_INTERVAL;\r\n    return new Date(lastRefreshed).getMilliseconds() > fiveMinutesAgo;\r\n}","export const REFRESH_INTERVAL = 1000 * 60 * 5; //5 minutes","import React from \"react\";\r\nimport {Button, Pagination, Row, Image} from \"react-bootstrap/esm/\";\r\nimport {ModalWindow} from \"./ModalWindow\";\r\nimport {RssFeedDto} from \"../schema\";\r\nimport Col from \"react-bootstrap/esm/Col\";\r\nimport {REFRESH_INTERVAL} from \"../constants\";\r\nimport {shouldBeRefreshed} from \"../helper\";\r\n\r\nexport interface ContentBoxState {\r\n    showModal: boolean;\r\n    rssFeed: RssFeedDto[];\r\n    currentlyViewing: RssFeedDto[];\r\n    amountOfPages: number;\r\n    activePage: number;\r\n    lastUpdated: Date | undefined;\r\n    url: string;\r\n}\r\n\r\n\r\nexport interface ContentBoxProps {\r\n    id: number,\r\n}\r\n\r\n\r\nfunction defaultState(): ContentBoxState {\r\n    return {\r\n        showModal: false,\r\n        rssFeed: [],\r\n        currentlyViewing: [],\r\n        amountOfPages: 0,\r\n        activePage: 1,\r\n        lastUpdated: undefined,\r\n        url: \"\"\r\n    }\r\n}\r\n\r\n\r\nexport class ContentBox extends React.Component<ContentBoxProps, ContentBoxState> {\r\n\r\n    constructor(props: ContentBoxProps) {\r\n        super(props);\r\n        this.state = defaultState();\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.clearData = this.clearData.bind(this);\r\n        this.getRSSFeed = this.getRSSFeed.bind(this);\r\n        this.populatePage = this.populatePage.bind(this);\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal() {\r\n        this.setState({showModal: false});\r\n    }\r\n\r\n    clearData() {\r\n        this.setState(defaultState());\r\n    }\r\n\r\n    getRSSFeed(url: string) {\r\n        this.closeModal();\r\n        fetch('https://homepage-be.herokuapp.com/rss', {\r\n            method: \"POST\",\r\n            body: url\r\n        }).then((res) => {\r\n            return res.json();\r\n        }).then((json: RssFeedDto[]) => {\r\n            const now = new Date();\r\n            this.setState({rssFeed: json, amountOfPages: Math.ceil(json.length / 3), lastUpdated: now, url: url}, () => {\r\n                const toSave: Partial<ContentBoxState> = {\r\n                    rssFeed: json,\r\n                    lastUpdated: now,\r\n                    url: url\r\n                };\r\n                localStorage.setItem(String(this.props.id), JSON.stringify(toSave));\r\n                this.populatePage(1);\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const locallyStoredJson = localStorage.getItem(String(this.props.id));\r\n        if (locallyStoredJson) {\r\n            const savedState: Partial<ContentBoxState> = JSON.parse(locallyStoredJson);\r\n            if(savedState.lastUpdated && savedState.url && shouldBeRefreshed(savedState.lastUpdated)){\r\n                this.getRSSFeed(savedState.url);\r\n            } else {\r\n                this.setState(prevState => ({\r\n                    ...prevState, ...savedState,\r\n                }), () => {\r\n                    this.setState({amountOfPages: Math.ceil(this.state.rssFeed.length / 3)}, () => {\r\n                        this.populatePage(1);\r\n                    });\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    populatePage(key: number) {\r\n        const div = Math.floor(this.state.rssFeed.length / this.state.amountOfPages);\r\n        const mod = this.state.rssFeed.length % this.state.amountOfPages;\r\n        let index: number;\r\n        if (key >= (this.state.amountOfPages - mod)) {\r\n            index = (div + 1) * (key - 1);\r\n        } else {\r\n            index = div * (key - 1);\r\n        }\r\n        this.setState({currentlyViewing: this.state.rssFeed.slice(index, index + 3), activePage: key});\r\n    }\r\n\r\n    render() {\r\n        const rss = this.state.currentlyViewing.map((dto) => {\r\n            return (\r\n                <Row key={dto.url}>\r\n                    <h1 className=\"heading\"><a href={dto.url}>{dto.title}</a></h1>\r\n                    <Image src={dto.imgUrl} fluid rounded/>\r\n                    <p>{dto.description}</p>\r\n                </Row>\r\n            )\r\n        });\r\n\r\n        let pages = [];\r\n        for (let i = 1; i <= this.state.amountOfPages; i++) {\r\n            pages.push(\r\n                <Pagination.Item key={i} active={this.state.activePage === i} onClick={() => this.populatePage(i)}>\r\n                    {i}\r\n                </Pagination.Item>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <Col xs={3} md={3} className={\"box-shadow mx-5\"}>\r\n                <div className=\"column-content\">\r\n                    <ModalWindow title=\"Add RSS feed\" isOpen={this.state.showModal} onClose={this.closeModal}\r\n                                 onConfirm={this.getRSSFeed}/>\r\n                    {rss.length > 0 ? rss : <h1 className=\"heading\">Empty :(</h1>}\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                        <Pagination>{pages}</Pagination>\r\n                        {rss.length > 0 ?\r\n                            <Button className={\"mb-2\"} variant=\"danger\" size=\"sm\" onClick={this.clearData}>-</Button>\r\n                            :\r\n                            <Button className={\"mb-2\"} variant=\"primary\" size=\"sm\" onClick={this.openModal}>+</Button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        )\r\n    }\r\n}","import Navbar from \"react-bootstrap/esm/Navbar\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport Collapse from \"react-bootstrap/esm/Collapse\";\r\nimport React from \"react\";\r\n\r\nexport class Header extends React.Component<any, any> {\r\n    render() {\r\n        return (\r\n            <header>\r\n                <Navbar bg=\"dark\">\r\n                    <a className=\"navbar-brand\" href=\"#\">⌂</a>\r\n                </Navbar>\r\n            </header>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport Image from \"react-bootstrap/esm/Image\";\r\nimport {shouldBeRefreshed} from \"../helper\";\r\n\r\nexport interface WeatherReport {\r\n    time: string,\r\n    temperature: string\r\n}\r\n\r\nexport interface WeatherState {\r\n    currentWeather: WeatherReport,\r\n    lastUpdated: Date | undefined\r\n}\r\n\r\nexport interface WeatherProps {\r\n    location: Position | undefined\r\n}\r\n\r\nfunction defaultState(): WeatherState {\r\n    return {\r\n        currentWeather: {time: \"\", temperature: \"\"},\r\n        lastUpdated: undefined\r\n    }\r\n}\r\n\r\nexport class Weather extends React.Component<WeatherProps, WeatherState> {\r\n\r\n    private symbol: Symbol;\r\n\r\n    constructor(props: WeatherProps) {\r\n        super(props);\r\n        this.state = defaultState();\r\n        this.checkWeather = this.checkWeather.bind(this);\r\n        this.symbol = Symbol();\r\n    }\r\n\r\n    checkWeather() {\r\n        if (this.props.location && this.props.location.coords) {\r\n            const coords = this.props.location.coords;\r\n            const lat = Math.round(coords.latitude * Math.pow(10, 6)) / Math.pow(10, 6);\r\n            const lon = Math.round(coords.longitude * Math.pow(10, 6)) / Math.pow(10, 6);\r\n            fetch('https://opendata-download-metfcst.smhi.se/api/category/pmp3g/version/2/geotype/point/lon/'\r\n                + lon + '/lat/' + lat\r\n                + '/data.json', {method: 'get'})\r\n                .then((res) => {\r\n                    return res.json();\r\n                })\r\n                .then((json) => {\r\n                    const current = json.timeSeries[1];\r\n                    const temperature = current.parameters[11].values[0];\r\n                    this.setState({\r\n                        currentWeather: {\r\n                            time: new Date(current.validTime).toDateString(),\r\n                            temperature: temperature\r\n                        }\r\n                    }, () => {\r\n                        const toSave: Partial<WeatherState> = {\r\n                            currentWeather: this.state.currentWeather,\r\n                            lastUpdated: new Date()\r\n                        };\r\n                        localStorage.setItem(this.symbol.toString(), JSON.stringify(toSave));\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(props: WeatherProps) {\r\n        const stored = JSON.parse(localStorage.getItem(this.symbol.toString()) as string);\r\n        if(props.location !== this.props.location){\r\n            this.checkWeather();\r\n        }\r\n        if (stored && stored.lastUpdated) {\r\n            if(shouldBeRefreshed(stored.lastUpdated)){\r\n                this.checkWeather();\r\n            } else if(JSON.stringify(stored.currentWeather) != JSON.stringify(this.state.currentWeather)){\r\n                this.setState(stored);\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const currentWeather = this.state.currentWeather;\r\n        return (\r\n            <div className=\"weather mb-3\">\r\n                <Image className=\"mb-1\" src={process.env.PUBLIC_URL + '/weather.png'} fluid/>\r\n                {currentWeather.temperature && <p><b>Temperature:</b>{currentWeather.temperature}°C</p>}\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Jumbotron from \"react-bootstrap/esm/Jumbotron\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\nimport {ContentBox} from \"./ContentBox\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport {Header} from \"./Header\";\r\nimport {Weather} from \"./Weather\";\r\n\r\n\r\nexport interface HomeState {\r\n    rowCount: number;\r\n    location: Position | undefined\r\n}\r\n\r\nfunction defaultState(): HomeState {\r\n    return {\r\n        rowCount: 1,\r\n        location: undefined\r\n    }\r\n}\r\n\r\nexport class Home extends React.Component<{}, HomeState> {\r\n\r\n    constructor() {\r\n        super({});\r\n        this.state = defaultState();\r\n        this.addRow = this.addRow.bind(this);\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        navigator.geolocation.getCurrentPosition((loc) => {\r\n            this.setState({location: loc});\r\n        });\r\n    }\r\n\r\n    addRow() {\r\n        this.setState({rowCount: this.state.rowCount + 1});\r\n    }\r\n\r\n    deleteRow() {\r\n        this.setState({rowCount: this.state.rowCount - 1});\r\n    }\r\n\r\n    buildCols(count: number, row: number) {\r\n        let cols = [];\r\n        for (let i = 1; i <= count; i++) {\r\n            cols.push(\r\n                <ContentBox id={row * i}/>\r\n            )\r\n        }\r\n        return cols;\r\n    }\r\n\r\n    buildRows(count: number) {\r\n        let rows = [];\r\n        for (let i = 1; i <= count; i++) {\r\n            rows.push(\r\n                <Row key={i} className={\"justify-content-center\"}>\r\n                    {this.buildCols(3, i)}\r\n                </Row>\r\n            )\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    render() {\r\n        const rows = this.buildRows(this.state.rowCount);\r\n        return (\r\n            <div>\r\n                <Header/>\r\n                <Container>\r\n                    <Jumbotron className=\"text-center\" fluid>\r\n                        <Container>\r\n                            <Weather location={this.state.location}/>\r\n                            <h1 className=\"heading\">Simply the best homepage in the world</h1>\r\n                            <Button className={\"mx-1 my-2\"} color={\"primary\"} onClick={this.addRow}>Add row</Button>\r\n                            <Button className={\"my-2\"} variant=\"outline-secondary\" onClick={this.deleteRow}>Delete\r\n                                row</Button>\r\n                        </Container>\r\n                    </Jumbotron>\r\n                </Container>\r\n                <div className=\"rsscontainer py-5 bg-light\">\r\n                    {rows}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Home} from './components/Home';\nimport './css/style.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<Home/>, document.getElementById('root'));\n"],"sourceRoot":""}